buildscript {
repositories {
        mavenLocal()
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = version = "${minecraft_version}-${mod_version}"
group= "kratz.mc"
archivesBaseName = "kratzAuth"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: "${mappings_version}"

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP,CORE'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                kratzauth {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP,CORE'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                kratzauth {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP,CORE'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'ironchest', '--all', '--output', file('generated/resources/')

            mods {
                kratzauth {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version
}

jar {
    manifest {
        attributes([
            "Specification-Title": "kratzauth",
            "Specification-Vendor": "Kratz",
            "Specification-Version": "1.3", // The version number of the specification, not the version of the mod
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",  // the version number of the mod.  copy the version from earlier in this file
            "Implementation-Vendor" :"Kratz",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
